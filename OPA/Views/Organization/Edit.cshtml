@**
    *  Copyright 2018 Andrew Franqueira
    *
    *  This file is part of OPA.
    *  Licensed under GNU General Public License 3.0 or later.
    *  Some rights reserved. See COPYING.
    *
    *  @license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+>
*@

@model OPA.Models.OrganizationViewModel

@{
    ViewBag.Title = "Edit Organization";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p class="pull-right">
    @Html.ActionLink("Back to list of organizations", "Index", null, new { @class = "btn btn-default" })
</p>

<h1>@Html.DisplayFor(model => model.Name)</h1>

<!-- Nav tabs -->
<div class="clearfix"></div>
<ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#organization" aria-controls="organization" role="tab" data-toggle="tab">Organization</a></li>
    <li role="presentation"><a href="#contacts" aria-controls="contacts" role="tab" data-toggle="tab">Contact Details</a></li>
    <li role="presentation"><a href="#donations" aria-controls="donations" role="tab" data-toggle="tab">Donations</a></li>
</ul>

    <!-- Tab panes -->
<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="organization">
        <div>&nbsp;</div>
        <div class="form-horizontal">

            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "org-form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Active)
                                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
            }
        </div>
    </div>

    <div role="tabpanel" class="tab-pane" id="contacts">
        <p class="pull-right">
            @Html.ActionLink("Add a contact", "Create", "Contact", new { organizationId = Model.Id }, new { @class = "btn btn-default modal-link" })
        </p>
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Contact Type</th>
                    <th>Contact Details</th>
                    @if (Model.Contacts.Any())
                    {
                        <th>Action</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model.Contacts != null)
                {
                    foreach (var contact in Model.Contacts)
                    {
                        <tr>
                            <td>@contact.ContactType</td>
                            <td>@contact.ContactDetails</td>
                            @if (Model.Contacts.Any())
                            {
                                <td>
                                    @Html.ActionLink("Edit", "Edit", "Contact", new { id = contact.Id }, new { @class = "btn btn-default modal-link" })
                                    @using (Html.BeginForm("Delete", "Contact", null, FormMethod.Post, new { style = "display: inline-block" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("contactId", contact.Id)
                                        <input type="submit" value="Delete" class="btn btn-default" onclick="return confirm('Delete contact, are you sure?')" />
                                    }
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
        <div class="clearfix">&nbsp;</div>

        <hr />
        <p class="pull-right">
            @Html.ActionLink("Add a contact address", "CreateAddress", "Contact", new { organizationId = Model.Id }, new { @class = "btn btn-default modal-link" })
        </p>
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Addresses[0].AddressLine)</th>
                    <th>@Html.DisplayNameFor(model => model.Addresses[0].City)</th>
                    <th>@Html.DisplayNameFor(model => model.Addresses[0].State)</th>
                    <th>@Html.DisplayNameFor(model => model.Addresses[0].PostalCode)</th>
                    <th class="hidden-xs">@Html.DisplayNameFor(model => model.Addresses[0].Country)</th>
                    @if (Model.Addresses.Any())
                    {
                        <th>Action</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model.Addresses != null)
                {
                    foreach (var address in Model.Addresses)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => address.AddressLine)</td>
                            <td>@Html.DisplayFor(modelItem => address.City)</td>
                            <td>@Html.DisplayFor(modelItem => address.State)</td>
                            <td>@Html.DisplayFor(modelItem => address.PostalCode)</td>
                            <td class="hidden-xs">@Html.DisplayFor(modelItem => address.Country)</td>
                            @if (Model.Addresses.Any())
                            {
                                <td>
                                    @Html.ActionLink("Correct", "EditAddress", "Contact", new { id = address.Id }, new { @class = "btn btn-default modal-link" })
                                    @using (Html.BeginForm("DeleteAddress", "Contact", null, FormMethod.Post, new { style = "display: inline-block" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("contactAddressId", address.Id)
                                        <input type="submit" value="Delete" class="btn btn-default" onclick="return confirm('Delete contact address, are you sure?')" />
                                    }
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div role="tabpanel" class="tab-pane" id="donations">
        <p class="pull-right">
            @Html.ActionLink("Record a donation", "CreateDonation", "Financial", new { organizationId = Model.Id }, new { @class = "btn btn-default modal-link" })
        </p>
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Donations[0].DonationDate)</th>
                    <th>@Html.DisplayNameFor(model => model.Donations[0].Amount)</th>
                    <th>@Html.DisplayNameFor(model => model.Donations[0].Fund)</th>
                    <th>@Html.DisplayNameFor(model => model.Donations[0].Designation)</th>
                    @if (Model.Donations.Any())
                    {
                        <th>Action</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model.Donations != null)
                {
                    foreach (var donation in Model.Donations)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => donation.DonationDate)</td>
                            <td>@Html.DisplayFor(modelItem => donation.Amount)</td>
                            <td>@Html.DisplayFor(modelItem => donation.Fund)</td>
                            <td>@Html.DisplayFor(modelItem => donation.Designation)</td>
                            @if (Model.Donations.Any())
                            {
                                <td>
                                    @Html.ActionLink("Edit", "EditDonation", "Financial", new { id = donation.Id }, new { @class = "btn btn-default modal-link" })
                                    @using (Html.BeginForm("DeleteDonation", "Financial", null, FormMethod.Post, new { style = "display: inline-block" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.Hidden("donationId", donation.Id)
                                        <input type="submit" value="Delete" class="btn btn-default" onclick="return confirm('Delete donation, are you sure?')" />
                                    }
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#org-form").validate({
                rules: { Name: { required: true } }
            });
        });
    </script>
}