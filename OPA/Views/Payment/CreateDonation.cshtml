@**
    *  Copyright 2018 Andrew Franqueira
    *
    *  This file is part of OPA.
    *  Licensed under GNU General Public License 3.0 or later.
    *  Some rights reserved. See COPYING.
    *
    *  @license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+>
*@

@model OPA.Models.PaymentDonationViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h3 class="modal-title">Record Donation</h3>
</div>

<div class="modal-body">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "donation-form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PaymentId)

            <div class="alert alert-info">
                <h4>@Model.DonorName</h4>
                <div class="col-md-6">
                    <p class="break-line">@Model.PaymentMethod</p>
                </div>
                <div class="col-md-6">
                    <p class="break-line">@Model.PaymentDetails</p>
                </div>
                <div class="clearfix"></div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-xs-9">
                    @Html.DropDownListFor(model => model.PersonId, Model.DonorList, "Select Donor...", new { @class = "form-control required" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-xs-4">
                    @Html.LabelFor(model => model.Designations[0].Fund, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-xs-5">
                    @Html.LabelFor(model => model.Designations[0].Designation, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-xs-3">
                    @Html.LabelFor(model => model.Designations[0].Amount, htmlAttributes: new { @class = "control-label" })
                </div>
            </div>

            @for (var i = 0; i < Model.Designations.Count; i++)
            {
                <div class="form-group designation">
                    <div class="col-xs-4">
                        @Html.DropDownListFor(model => model.Designations[i].Fund, Model.FundList, "Select Fund...", new { @class = "form-control fund" })
                    </div>
                    <div class="col-xs-5">
                        @Html.EditorFor(model => model.Designations[i].Designation, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="col-xs-3">
                        @Html.EditorFor(model => model.Designations[i].Amount, new { htmlAttributes = new { @class = "form-control number" } })
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-md-12">
                    <span id="add-designation" class="btn btn-default pull-right">Add another fund/designation</span>
                </div>
                <div class="col-md-9">
                    <input type="submit" value="Save" class="btn btn-default" />
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>


<script type="text/javascript">
    $(document).ready(function () {

        $("#donation-form").validate({
            submitHandler: function (form) {
                var total = 0;
                $("[id$=Amount]").each(function () {
                    total += parseFloat($(this).val());
                });

                if (total !== parseFloat(@Model.PaymentAmount)) {
                    alert("Total designations must equal $@Model.PaymentAmount");
                    return false;
                }
                form.submit();
                return true;
            }
        });

        $("[id$=Fund]").each(function () {
            $(this).rules('add', {
                required: {
                    depends: function () {
                        var amount = $("#" + $(this).attr("id").replace("Fund", "Amount")).val();
                        return amount !== "" && amount > 0;
                    }
                }
            });
        });

        $(".designation").hide();
        $(".designation:hidden").first().show();

        $("#add-designation").click(function () {
            $(".designation:hidden").first().show();
            if (!$(".designation:hidden").length) {
                $("#add-designation").hide();
            }
        });
    });
</script>