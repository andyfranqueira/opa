@**
    *  Copyright 2018 Andrew Franqueira
    *
    *  This file is part of OPA.
    *  Licensed under GNU General Public License 3.0 or later.
    *  Some rights reserved. See COPYING.
    *
    *  @license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+>
*@

@model OPA.Models.PersonViewModel

@{
    ViewBag.Title = "Create Person";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p class="pull-right">
    @Html.ActionLink("Back to list", "Index", null, new { @class = "btn btn-default" })
</p>

<h1>@ViewBag.Title</h1>
<hr />

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "person-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ParentId)

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.Sex, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="input-group date">
                    @Html.TextBoxFor(model => model.DateOfBirth, "{0:MM/dd/yyyy}", new { id = "date-of-birth", @class = "form-control" })
                    <span id="date-icon" class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div>
                    @Html.DropDownListFor(model => model.MemberType, (List<SelectListItem>)ViewBag.MemberTypeList, "", new { @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        @if (Model.ForCouple)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ForCouple, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-1">
                    @Html.EditorFor(model => model.ForCouple, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.ForCouple)
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save new person" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function() {

            $("#date-of-birth").datepicker({
                format: "mm/dd/yyyy",
                container: $(".bootstrap-iso form").length > 0 ? $(".bootstrap-iso form").parent() : "div.date",
                todayHighlight: true,
                autoclose: true,
                startView: "years",
                defaultViewDate: { year: 1980 }
            });

            $("#date-icon").click(function () {
                $("#date-of-birth").select();
            });

            $("#person-form").validate({
                rules: {
                    LastName: { required: true },
                    FirstName: { required: true }
                }
            });
        });
    </script>
}