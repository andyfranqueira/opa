@**
    *  Copyright 2018 Andrew Franqueira
    *
    *  This file is part of OPA.
    *  Licensed under GNU General Public License 3.0 or later.
    *  Some rights reserved. See COPYING.
    *
    *  @license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+>
*@

@model OPA.Models.ContactAddressViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal">&times;</button>
    <h3 class="modal-title">Create a Contact Address</h3>
</div>

<div class="modal-body">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "address-form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PersonId)
            @Html.HiddenFor(model => model.OrganizationId)

            @if(Model.EligibleAddressList != null && Model.EligibleAddressList.Any())
            {
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownList("AddressId", Model.EligibleAddressList, "Choose an Existing Family Address...", new { @class = "form-control" })
                    </div>
                </div>
                <h3 class="text-center">or create a new address</h3>
                <hr/>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.AddressLine, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.AddressLine, new { htmlAttributes = new { @class = "form-control new-address" } })
                    @Html.ValidationMessageFor(model => model.AddressLine, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control new-address" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control new-address" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control new-address" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control new-address" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (Model.ForFamily)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.ForFamily, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-1">
                        @Html.EditorFor(model => model.ForFamily, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-8">
                    <input type="submit" value="Save" class="btn btn-default" />
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>


<script type="text/javascript">
    $(document).ready(function () {

        $("#AddressId").change(function () {
            if ($("#AddressId").val() !== "") {
                $(".new-address").attr("disabled", "disabled").val("");
            } else {
                $(".new-address").removeAttr('disabled');
            }
        });

        $("#address-form").validate({
            rules: {
                AddressLine: { required: { depends: function () { return $("#AddressId").length === 0 || $("#AddressId").val() === ""; } } },
                City: { required: { depends: function () { return $("#AddressId").length === 0 || $("#AddressId").val() === ""; } } },
                State: { required: { depends: function () { return $("#AddressId").length === 0 || $("#AddressId").val() === ""; } } }
            }
        });
    });
</script>