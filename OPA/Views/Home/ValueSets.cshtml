@**
    *  Copyright 2018 Andrew Franqueira
    *
    *  This file is part of OPA.
    *  Licensed under GNU General Public License 3.0 or later.
    *  Some rights reserved. See COPYING.
    *
    *  @license GPL-3.0+ <http://spdx.org/licenses/GPL-3.0+>
*@

@using OPA.Entities
@model List<OPA.Models.ValueSetViewModel>

@{
    ViewBag.Title = "Internal Value Sets";
}

<h1>@ViewBag.Title</h1>
<hr />

<div id="main-content">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "values-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-md-12">
            <div class="col-md-6">
                @{
                    var currentSet = string.Empty;
                }

                @for (var i = 0; i < Model.Count; i++)
                {
                    var set = Model[i].Set;
                    if (set != null)
                    {
                        if (currentSet != set.GetDisplay())
                        {
                            currentSet = set.GetDisplay();
                            <h3>@currentSet</h3>
                        }

                        @Html.HiddenFor(model => model[i].Id)

                        <div class="clearfix">
                            @Html.HiddenFor(model => model[i].Set)

                            <div class="col-xs-6">
                                @Html.EditorFor(model => model[i].Option, new { htmlAttributes = new { @class = "form-control" } })
                            </div>

                            <div class="col-xs-3">
                                @Html.EditorFor(model => model[i].Order, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="col-md-6">
                @for (var i = 0; i < Model.Count; i++)
                {
                    if (Model[i].Set == null)
                    {
                        <h3>Add a New Value</h3>
                        @Html.HiddenFor(model => model[i].Id)

                        <div class="form-group clearfix">
                            <div class="col-xs-9">
                                @Html.EnumDropDownListFor(model => model[i].Set, "Select Value Set...", new { @class = "form-control" })
                            </div>

                            <div class="col-xs-6">
                                @Html.EditorFor(model => model[i].Option, new { htmlAttributes = new { @class = "form-control", placeholder = "Option" } })
                            </div>

                            <div class="col-xs-3">
                                @Html.EditorFor(model => model[i].Order, new { htmlAttributes = new { @class = "form-control", placeholder = "Order" } })
                            </div>
                        </div>
                    }
                }
            </div>
        </div>

        <div class="form-group clearfix">
            <div class="pull-right">
                <input id="complete" type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    }
</div>


@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {});
    </script>
}
